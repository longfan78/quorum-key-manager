// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	entities "github.com/longfan78/quorum-key-manager/src/auth/entities"
	entities0 "github.com/longfan78/quorum-key-manager/src/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVaults is a mock of Vaults interface
type MockVaults struct {
	ctrl     *gomock.Controller
	recorder *MockVaultsMockRecorder
}

// MockVaultsMockRecorder is the mock recorder for MockVaults
type MockVaultsMockRecorder struct {
	mock *MockVaults
}

// NewMockVaults creates a new mock instance
func NewMockVaults(ctrl *gomock.Controller) *MockVaults {
	mock := &MockVaults{ctrl: ctrl}
	mock.recorder = &MockVaultsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVaults) EXPECT() *MockVaultsMockRecorder {
	return m.recorder
}

// CreateHashicorp mocks base method
func (m *MockVaults) CreateHashicorp(ctx context.Context, name string, config *entities0.HashicorpConfig, allowedTenants []string, userInfo *entities.UserInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHashicorp", ctx, name, config, allowedTenants, userInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateHashicorp indicates an expected call of CreateHashicorp
func (mr *MockVaultsMockRecorder) CreateHashicorp(ctx, name, config, allowedTenants, userInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHashicorp", reflect.TypeOf((*MockVaults)(nil).CreateHashicorp), ctx, name, config, allowedTenants, userInfo)
}

// CreateAzure mocks base method
func (m *MockVaults) CreateAzure(ctx context.Context, name string, config *entities0.AzureConfig, allowedTenants []string, userInfo *entities.UserInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAzure", ctx, name, config, allowedTenants, userInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAzure indicates an expected call of CreateAzure
func (mr *MockVaultsMockRecorder) CreateAzure(ctx, name, config, allowedTenants, userInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAzure", reflect.TypeOf((*MockVaults)(nil).CreateAzure), ctx, name, config, allowedTenants, userInfo)
}

// CreateAWS mocks base method
func (m *MockVaults) CreateAWS(ctx context.Context, name string, config *entities0.AWSConfig, allowedTenants []string, userInfo *entities.UserInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAWS", ctx, name, config, allowedTenants, userInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAWS indicates an expected call of CreateAWS
func (mr *MockVaultsMockRecorder) CreateAWS(ctx, name, config, allowedTenants, userInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAWS", reflect.TypeOf((*MockVaults)(nil).CreateAWS), ctx, name, config, allowedTenants, userInfo)
}

// Get mocks base method
func (m *MockVaults) Get(ctx context.Context, name string, userInfo *entities.UserInfo) (*entities0.Vault, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, name, userInfo)
	ret0, _ := ret[0].(*entities0.Vault)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockVaultsMockRecorder) Get(ctx, name, userInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVaults)(nil).Get), ctx, name, userInfo)
}
